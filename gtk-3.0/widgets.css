*
{
	-gtk-icon-style: regular;
	color: @fg_color;
}

*:disabled,
*:disabled *
{
	color: @insensitive_fg_color;
	text-shadow: 1px 1px @insensitive_text_shadow_color;
	-gtk-icon-effect: dim;
	-gtk-icon-shadow: 1px 1px @insensitive_text_shadow_color;
}

selection,
.selection,
:selected,
.selection *,
:selected *
{
	background-color: @selected_bg_color;
	color: @selected_fg_color;
}

:focus
{
	outline-color: @fg_color;
	outline-offset: -1px;
	outline-style: dotted;
	outline-width: 1px;
}

.background
{
	background-color: @bg_color;
}

.titlebar
{
	padding: 6px;
}

decoration,
window.maximized > decoration
{
	background-color: @selected_bg_color;
	border: 1px solid black;
	color: @selected_fg_color;
}

.link,
:link,
button.link label
{
	color: @link_color;
	text-decoration: underline;
}

button
{
	background-color: @bg_color;
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
	padding: 6px;
}

button:focus
{
	outline-offset: -4px;
}

button.flat,
button.link
{
	border: none;
	background-color: transparent;
}

button:hover,
button:active
{
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
	background-color: @hover_bg_color;
}

button:active,
button:checked
{
	border-image-source: url('../gtk-assets/button-border-pressed.png');
	border-image-width: 2px 1px 1px 2px;
	border-image-slice: 2 1 1 2;
}

statusbar > *,
statusbar/* button:not(:active):not(:checked)*/
{
	border-image-source: url('../gtk-assets/button-border-pressed.png');
	border-image-width: 2px 1px 1px 2px;
	border-image-slice: 2 1 1 2;
}


switch
{
	border-image-source: url('../gtk-assets/button-border-pressed.png');
	border-image-width: 2px 1px 1px 2px;
	border-image-slice: 2 1 1 2;
	padding: 2px;
}

switch > slider
{
	background-color: @selected_bg_color;
	border-image-source: url('../gtk-assets/progressbar-chunk-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
}


:not(menuitem) > check
{
	-gtk-icon-source: none;
	background-image: url('../gtk-assets/checkbox-unchecked-enabled.png');
	background-repeat: no-repeat;
	min-width: 13px;
	min-height: 13px;
	padding-right: 6px;
}

:not(menuitem) > check:active
{
	background-image: url('../gtk-assets/checkbox-unchecked-active.png');
}

:not(menuitem) > check:checked
{
	background-image: url('../gtk-assets/checkbox-checked-enabled.png');
}

:not(menuitem) > check:checked:active
{
	background-image: url('../gtk-assets/checkbox-checked-active.png');
}

:not(menuitem) > check:disabled
{
	background-image: url('../gtk-assets/checkbox-unchecked-disabled.png');
}

:not(menuitem) > check:checked:disabled
{
	background-image: url('../gtk-assets/checkbox-checked-disabled.png');
}


:not(menuitem) > radio
{
	-gtk-icon-source: none;
	background-image: url('../gtk-assets/radio-unchecked-enabled.png');
	background-repeat: no-repeat;
	min-width: 13px;
	min-height: 13px;
	padding-right: 6px;
}

:not(menuitem) > radio:active
{
	background-image: url('../gtk-assets/radio-unchecked-active.png');
}

:not(menuitem) > radio:checked
{
	background-image: url('../gtk-assets/radio-checked-enabled.png');
}

:not(menuitem) > radio:checked:active
{
	background-image: url('../gtk-assets/radio-checked-active.png');
}

:not(menuitem) > radio:disabled
{
	background-image: url('../gtk-assets/radio-unchecked-disabled.png');
}

:not(menuitem) > radio:checked:disabled
{
	background-image: url('../gtk-assets/radio-checked-disabled.png');
}


checkbutton,
radiobutton
{
	padding: 2px;
}


tooltip.background
{
	background-color: @tooltip_bg_color;
	border: 1px solid @tooltip_fg_color;
}


menu,
popover
{
	border-image-source: url('../gtk-assets/menu-border.png');
	border-image-width: 2px;
	border-image-slice: 2;
	margin: 3px 0px 3px 0px;
}

menu > *,
popover > *
{
	margin: 0px 2px 0px 2px;
}

menu > :first-child,
popover > :first-child
{
	margin-top: 3px;
}

menu > :last-child,
popover > :last-child
{
	margin-bottom: 3px;
}

menuitem > arrow
{
	min-width: 16px;
	min-height: 16px;
}

menuitem > arrow.right
{
	margin: 0px -4px 0px 4px;
	-gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
}

menuitem > arrow.left
{
	margin: 0px 4px 0px -4px;
	-gtk-icon-source: -gtk-icontheme('pan-start-symbolic');
}

menuitem > check
{
	background: none;
	min-width: 8px;
	min-height: 7px;
	margin: 0px 6px 0px 2px;
}

menuitem > check:checked
{
	-gtk-icon-source: -gtk-recolor(url('../gtk-assets/menu-item-check.png'));
}

menuitem:hover > check:checked
{
	-gtk-icon-source: -gtk-recolor(url('../gtk-assets/menu-item-check-hover.png'));
}

menuitem > radio
{
	background: none;
	min-width: 5px;
	min-height: 5px;
	margin: 0px 8px 0px 3px;
}

menuitem > radio:checked
{
	-gtk-icon-source: -gtk-recolor(url('../gtk-assets/menu-item-radio.png'));
}

menuitem:hover > radio:checked
{
	-gtk-icon-source: -gtk-recolor(url('../gtk-assets/menu-item-radio-hover.png'));
}

menuitem,
menu > arrow,
popover.menu modelbutton
{
	padding: 4px;
}

menuitem:hover,
popover.menu modelbutton:hover
{
	background-color: @selected_bg_color;
}

menuitem:hover > label,
menuitem:hover > label > accelerator,
menuitem:hover > box > label,
menuitem:hover > arrow,
menuitem:hover cellview,
popover.menu modelbutton:hover *
{
	color: @selected_fg_color;
}

menu > arrow
{
	min-height: 16px;
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
}

menu > arrow:hover
{
	background-color: @hover_bg_color;
}

menu > arrow:disabled
{
	border-image-width: 0px;
	background-color: transparent;
}

menu > arrow.top
{
	-gtk-icon-source: -gtk-icontheme('pan-up-symbolic');
}

menu > arrow.bottom
{
	-gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
}


menubar
{
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
	padding: 2px;
}


notebook > stack
{
	border-image-source: url('../gtk-assets/notebook-stack-border.png');
	border-image-width: 2px;
	border-image-slice: 2;
	padding: 2px;
}

notebook > header > tabs > tab
{
	padding: 4px 6px;
}

notebook > header.top > tabs > tab
{
	border-image-source: url('../gtk-assets/notebook-tab-border.png');
	border-image-width: 1px 2px 0px 1px;
	border-image-slice: 1 2 2 1;
	background-color: @color_3;
	margin-top: 2px;
}

notebook > header.top > tabs > tab:checked
{
	background-color: @bg_color;
	margin: 0 -1px -1px -1px;
}

notebook > header.top > tabs > tab:checked:first-child
{
	margin-left: 0px;
}

notebook > header.top > tabs > tab:checked:last-child
{
	margin-right: 0px;
}


toolbar
{
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
	padding: 3px;
}


scrollbar > contents > trough,
scale > contents > trough
{
	background-color: @color_3;
	border-style: solid;
	border-color: @color_1 @color_2 @color_2 @color_1;
}

scrollbar.horizontal > contents > trough,
scale.horizontal > contents > trough
{
	border-width: 1px 0px 1px 0px;
}

scrollbar.vertical > contents > trough,
scale.vertical > contents > trough
{
	border-width: 0px 1px 0px 1px;
}

scale.horizontal > contents > trough,
scale.vertical > contents > trough
{
	border-width: 1px;
}

scale.horizontal > contents > trough
{
	padding: 0 15px 0 15px;
}

scale.vertical > contents > trough
{
	padding: 15px 0 15px 0;
}

scrollbar > contents > trough > slider,
scale > contents > trough > slider
{
	background-color: @bg_color;
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
}

scrollbar.horizontal > contents > trough > slider,
scale.horizontal > contents > trough > slider
{
	min-width: 30px;
	min-height: 14px;
}

scrollbar.vertical > contents > trough > slider,
scale.vertical > contents > trough > slider
{
	min-width: 14px;
	min-height: 30px;
}

scale > contents > trough > slider/*,
scale > marks > mark > indicator*/
{
	background-position: center;
	background-repeat: no-repeat;
}

scale.horizontal > contents > trough > slider,
scale.horizontal > marks > mark > indicator
{
	background-image: url('../gtk-assets/scale-tick-horizontal.png');
}

scale.vertical > contents > trough > slider,
scale.vertical > marks > mark > indicator
{
	background-image: url('../gtk-assets/scale-tick-vertical.png');
}

scale.horizontal > marks > mark > indicator
{
	min-width: 1px;
	min-height: 10px;
}

scale.vertical > marks > mark > indicator
{
	min-width: 10px;
	min-height: 1px;
}

scrollbar > contents > trough > slider:hover,
scrollbar > contents > trough > slider:active,
scale > contents > trough > slider:hover,
scale > contents > trough > slider:active
{
	background-color: @hover_bg_color;
}

scrollbar > contents > button,
scrollbar > contents > button:hover
{
	min-height: 14px;
	min-width: 14px;
	padding: 0px;
}

scrollbar.horizontal > contents > button,
scrollbar.horizontal > contents > button:hover
{
	border-image-source: url('../gtk-assets/scrollbar-button-border-horizontal.png');
	border-image-width: 2px 2px 3px 1px;
	border-image-slice: 2 2 3 1;
}

scrollbar.vertical > contents > button,
scrollbar.vertical > contents > button:hover
{
	border-image-source: url('../gtk-assets/scrollbar-button-border-vertical.png');
	border-image-width: 1px 3px 2px 2px;
	border-image-slice: 1 3 2 2;
}

scrollbar.horizontal > contents > button:active
{
	border-image-source: url('../gtk-assets/scrollbar-button-border-pressed-horizontal.png');
	border-image-width: 3px 1px 2px 2px;
	border-image-slice: 3 1 2 2;
}

scrollbar.vertical > contents > button:active
{
	border-image-source: url('../gtk-assets/scrollbar-button-border-pressed-vertical.png');
	border-image-width: 2px 2px 1px 3px;
	border-image-slice: 2 2 1 3;
}

scrollbar > contents > button
{
	-gtk-icon-source: none;
	background-position: center;
	background-repeat: no-repeat;
}

scrollbar.horizontal > contents > button.up
{
	background-image: url('../gtk-assets/arrow-left.png');
}

scrollbar.horizontal > contents > button.down
{
	background-image: url('../gtk-assets/arrow-right.png');
}

scrollbar.vertical > contents > button.up
{
	background-image: url('../gtk-assets/arrow-up.png');
}

scrollbar.vertical > contents > button.down
{
	background-image: url('../gtk-assets/arrow-down.png');
}

scrollbar.horizontal > contents > button.up:disabled
{
	background-image: url('../gtk-assets/arrow-left-disabled.png');
}

scrollbar.horizontal > contents > button.down:disabled
{
	background-image: url('../gtk-assets/arrow-right-disabled.png');
}

scrollbar.vertical > contents > button.up:disabled
{
	background-image: url('../gtk-assets/arrow-up-disabled.png');
}

scrollbar.vertical > contents > button.down:disabled
{
	background-image: url('../gtk-assets/arrow-down-disabled.png');
}


.view:not(:selected),
treeview,
iconview,
list,
textview,
entry
{
	background-color: @color_2;
}

treeview header button
{
	padding: 4px 2px;
}


entry,
textview,
:not(stack) > list
{
	border-image-source: url('../gtk-assets/entry-border.png');
	border-image-width: 2px;
	border-image-slice: 2;
}

list
{
	padding: 4px;
}

list > row
{
	padding: 2px;
}

list > row:first-child
{
	padding-top: 0;
}

list > row:last-child
{
	padding-bottom: 0;
}

placessidebar list row box image
{
	margin-right: 6px;
}

entry
{
	padding: 4px;
}


combobox arrow
{
	min-width:  17px;
	min-height: 17px;
	-gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
}

combobox cellview + arrow
{
	border-image: url('../gtk-assets/combobox-separator.png') 0 0 0 2 / 0 0 0 2px;
	padding-left: 2px;
}


separator
{
	border-style: solid;
	border-width: 1px;
	border-color: @color_1 @color_2 @color_2 @color_1;
	margin: 2px;
}

paned > separator
{
	-gtk-icon-source: none;
	background-position: center;
	background-repeat: no-repeat;
	border: none;
}

paned.horizontal > separator:hover
{
	background-color: @hover_bg_color;
}

paned.horizontal > separator
{
	background-image: url('../gtk-assets/paned-separator-vertical.png');
	min-width: 5px;
}

paned.vertical > separator
{
	background-image: url('../gtk-assets/paned-separator-horizontal.png');
	min-height: 5px;
}


progressbar.horizontal trough,
progressbar.horizontal progress
{
	min-height: 24px;
}

progressbar.vertical trough,
progressbar.vertical progress
{
	min-width: 24px;
}

progressbar trough
{
	background-color: @color_3;
	border-width: 1px;
	border-style: solid;
	border-color: @color_1 @color_2 @color_2 @color_1;
}

progressbar progress:not(.empty)
{
	background-color: @selected_bg_color;
	border-image-source: url('../gtk-assets/progressbar-chunk-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
}


expander title:hover,
checkbutton:hover,
radiobutton:hover
{
	background-color: @hover_bg_color;
}

expander > title > arrow
{
	margin-right: 4px;
	background-image: url('../gtk-assets/arrow-right.png');
	min-width: 10px;
	min-height: 10px;
}

expander > title > arrow:checked
{
	background-image: url('../gtk-assets/arrow-down.png');
}

expander > title > arrow:disabled
{
	background-image: url('../gtk-assets/arrow-right-disabled.png');
}

expander > title > arrow:disabled:checked
{
	background-image: url('../gtk-assets/arrow-down-disabled.png');
}


buttonbox.linked > button
{
	margin: 0 6px 0 6px;
}

buttonbox.linked > button:first-child
{
	margin-left: 0px;
}

buttonbox.linked > button:last-child
{
	margin-right: 0px;
}


@keyframes spin {
	to { -gtk-icon-transform: rotate(1turn); }
}

spinner
{
	/*-gtk-icon-source: url('../gtk-assets/spinner.png');*/
	opacity: 0;
}

spinner:checked
{
	animation: spin 1s steps(12) infinite;
	opacity: 1;
}

spinner:disabled
{
	opacity: .5;
}


scale.horizontal.color > contents > trough > slider
{
	margin-top: 7px;
}

scale.vertical.color > contents > trough > slider
{
	margin-right: 7px;
}

colorchooser box.popover
{
	background-color: @bg_color;
	border-image-source: url('../gtk-assets/menu-border.png');
	border-image-width: 2px;
	border-image-slice: 2;
	margin: 3px 0px 3px 0px;
}

colorswatch
{
	border-image-source: url('../gtk-assets/button-border-pressed.png');
	border-image-width: 2px 1px 1px 2px;
	border-image-slice: 2 1 1 2;
	padding: 2px 1px 1px 2px;
}

colorswatch#add-color-button
{
	border-image-source: url('../gtk-assets/button-border.png');
	border-image-width: 1px 2px 2px 1px;
	border-image-slice: 1 2 2 1;
}

colorswatch#add-color-button:hover
{
	background-color: @hover_bg_color;
}

colorswatch:selected,
colorswatch:selected > overlay
{
	background-color: transparent;
}

colorswatch.dark:selected > overlay
{
	color: @selected_fg_color;
}

colorswatch.light:selected > overlay
{
	color: @fg_color;
}
